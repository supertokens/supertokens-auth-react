name: "Test examples"
on:
    push:
        branches:
            - example_testing
    workflow_dispatch:
        inputs:
            pluginInterfaceRepoOwnerName:
                description: "supertokens-plugin-interface repo owner name"
                default: supertokens
                required: true
            pluginInterfaceBranchName:
                description: "supertokens-plugin-interface repos branch name"
                default: master
                required: true
            coreRepoOwnerName:
                description: "supertokens-core repo owner name"
                default: supertokens
                required: true
            coreBranchName:
                description: "supertokens-core repo branch name"
                default: master
                required: true
            nodeRepoOwnerName:
                description: "supertokens-node repo owner name"
                default: supertokens
                required: true
            nodeBranchName:
                description: "supertokens-node repo branch name"
                default: master
                required: true
jobs:
    job1:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - uses: actions/checkout@v2
            - run: bash test/findExamplesWithTests.sh
            - id: set-matrix
              run: echo "::set-output name=matrix::{\"include\":$(bash test/findExamplesWithTests.sh)}"
    job2:
        needs: job1
        runs-on: ubuntu-latest
        strategy:
            matrix: ${{fromJson(needs.job1.outputs.matrix)}}
            fail-fast: false
        env:
            NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.example_testing_supabase_public_url }}
            NEXT_PUBLIC_SUPABASE_KEY: ${{ secrets.example_testing_supabase_public_key }}
            SUPABASE_SIGNING_SECRET: ${{ secrets.example_testing_supabase_signing_secret }}
        defaults:
            run:
                working-directory: ${{ matrix.examplePath }}
        steps:
            - uses: actions/checkout@v2
            - run: npm install
            - run: npm install mocha@6.1.4 jsdom-global@3.0.2 puppeteer@^11.0.0 isomorphic-fetch@^3.0.0
            - run: npm run build || true
            - run: HOST= npm start & bash ../../test/waitForServerStartup.sh && npx mocha --no-config --timeout 40000 test/**/*.test.js
