import { FormFieldError } from "./recipe/emailpassword/types";
import { APIFormField, AppInfo, AppInfoUserInput, FormField, NormalisedFormField } from "./types";
export declare function getRecipeIdFromSearch(search: string): string | null;
export declare function isTest(): boolean;
export declare function mergeFormFields(defaultFormFields: NormalisedFormField[], userFormFields: FormField[]): NormalisedFormField[];
export declare function normaliseInputAppInfoOrThrowError(appInfo: AppInfoUserInput): AppInfo;
export declare function validateForm(inputs: APIFormField[], formFields: NormalisedFormField[]): Promise<FormFieldError[]>;
export declare function defaultEmailValidator(value: string): Promise<"Email is invalid" | undefined>;
export declare function defaultPasswordValidator(value: string): Promise<"Password must contain at least 8 characters, including a number" | "Password's length must be lesser than 100 characters" | "Password must contain at least one alphabet" | "Password must contain at least one number" | undefined>;
export declare function capitalize(value: string): string;
export declare function defaultValidate(value: string): Promise<string | undefined>;
