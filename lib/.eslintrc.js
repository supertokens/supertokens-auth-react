/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "tsconfigRootDir": __dirname,
        "project": "tsconfig.json",
        "sourceType": "module",
        "createDefaultProgram": true
    },
    "plugins": [
        "@typescript-eslint",
        "@typescript-eslint/tslint"
    ],
    "extends":[
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react-hooks/recommended"
    ],
    "globals":{
        "React": "readable",
        "jsx": "readable"
    },
    "rules": {
        "typescript-eslint/indent": "off", // Prettier takes care of indentation.
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": [
            2,
            { "vars": "all", "args": "all", "varsIgnorePattern": "^React$|^jsx$" }
        ],
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": [
            "error",
            "double"
        ],
        "@typescript-eslint/semi": [
            "error",
            "always"
        ],
        "@typescript-eslint/type-annotation-spacing": "error",
        "brace-style": [
            "error",
            "1tbs"
        ],
        "no-implicit-coercion": [2, {
            "boolean": true,
            "number": true,
            "string": true
        }],
        "curly": ["error"],
        "eqeqeq": [
            "error",
            "smart"
        ],
        "id-match": "error",
        "no-eval": "error",
        "no-trailing-spaces": "error",
        "no-unsafe-finally": "error",
        "no-var": "error",
        "spaced-comment": [
            "error",
            "always",
            {
                "markers": [
                    "/"
                ]
            }
        ],
        "@typescript-eslint/tslint/config": [
            "error",
            {
                "rules": {
                    "whitespace": [
                        true,
                        "check-branch",
                        "check-decl",
                        "check-operator",
                        "check-separator",
                        "check-type"
                    ]
                }
            }
        ],
        "no-console": ["error", { allow: ["info", "error", "warn"] }]
    },
    "overrides": [
        {
          // disable the rule specifically for user input validators files.
          "files": ["**/validators.ts"],
          "rules": {
            "@typescript-eslint/explicit-module-boundary-types": ["off"]
          }
        }
      ]
};
